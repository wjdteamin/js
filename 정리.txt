1. MVC(웹 전용) 
- back이 화면까지 가지고 있다.
  flask가 templates폴더에 html을 가지고 이었다.
- 백은 html 또는 주소를 보내주고 프론트는 그대로 출력/이동
- 개발이 간편하다. 

- 그냥 전체를 만들어서 보여준다. 

- 모든 데이터가 서버에 다 들어있다.








앱 - 깔면 그 앱에서 가지고 있는 화면을 보여주는 것이다. 
2. REST 방식 
- back과 front는 별개, ajax로 연결
- 개발이 복잡하다. 
- 대신에 하나의 백으로 다양한 프로트와 연결하는 등 유연성이 뛰어나다.


3. 웹의 프로토콜(통신규약)
- http method : get과 post의
- http 상태코드
    200 : ok -> 서버에 오류가 발생하지 않았다. (결과가 나왔다. 오류가 없었다.) -> 내가 원하는 결과가 나온다는 의미는 아니다.
    400 : 서버에서 수신을 거부
    403 : 권한 오류 -> 서버에 오류가 나오지 않는다.
    404 : Not Found
    405 : method 오류
    500 : 서버에서 처리도중 오류 발생 

get / post의 차이 (http 메소드)
- get - 서버의 정보가 변경 X -> 보통 읽기가 get이다. 
- post - 서버의 정보가 변경 -> 한번만 실행해야 한다.(결제...)

4. callback 함수 
- 함수를 위탁해서 실행
- 이벤트처리 함수(이벤트 handler)가 대표적

5. $.ajax()에서 서버로 넘기는 데이터는 urlencoded다. 
- username은 spring, pwd는 1234라면
$.ajax({
  url : '서버주소',
  data : 'username=spring&pwd=1234'
})

-$.ajax()는 data에 자바스크립트를 주면 자동으로 urlencoded 변환 